/**
 * This class is generated by jOOQ
 */
package com.grb.indonesia.jooq.data.jooq.tables;


import com.grb.indonesia.jooq.data.jooq.Keys;
import com.grb.indonesia.jooq.data.jooq.Pinpoint;
import com.grb.indonesia.jooq.data.jooq.tables.records.BatchStepExecutionContextRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchStepExecutionContext extends TableImpl<BatchStepExecutionContextRecord> {

    private static final long serialVersionUID = -1434377093;

    /**
     * The reference instance of <code>pinpoint.BATCH_STEP_EXECUTION_CONTEXT</code>
     */
    public static final BatchStepExecutionContext BATCH_STEP_EXECUTION_CONTEXT = new BatchStepExecutionContext();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BatchStepExecutionContextRecord> getRecordType() {
        return BatchStepExecutionContextRecord.class;
    }

    /**
     * The column <code>pinpoint.BATCH_STEP_EXECUTION_CONTEXT.STEP_EXECUTION_ID</code>.
     */
    public final TableField<BatchStepExecutionContextRecord, Long> STEP_EXECUTION_ID = createField("STEP_EXECUTION_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pinpoint.BATCH_STEP_EXECUTION_CONTEXT.SHORT_CONTEXT</code>.
     */
    public final TableField<BatchStepExecutionContextRecord, String> SHORT_CONTEXT = createField("SHORT_CONTEXT", org.jooq.impl.SQLDataType.VARCHAR.length(2500).nullable(false), this, "");

    /**
     * The column <code>pinpoint.BATCH_STEP_EXECUTION_CONTEXT.SERIALIZED_CONTEXT</code>.
     */
    public final TableField<BatchStepExecutionContextRecord, String> SERIALIZED_CONTEXT = createField("SERIALIZED_CONTEXT", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>pinpoint.BATCH_STEP_EXECUTION_CONTEXT</code> table reference
     */
    public BatchStepExecutionContext() {
        this("BATCH_STEP_EXECUTION_CONTEXT", null);
    }

    /**
     * Create an aliased <code>pinpoint.BATCH_STEP_EXECUTION_CONTEXT</code> table reference
     */
    public BatchStepExecutionContext(String alias) {
        this(alias, BATCH_STEP_EXECUTION_CONTEXT);
    }

    private BatchStepExecutionContext(String alias, Table<BatchStepExecutionContextRecord> aliased) {
        this(alias, aliased, null);
    }

    private BatchStepExecutionContext(String alias, Table<BatchStepExecutionContextRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pinpoint.PINPOINT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BatchStepExecutionContextRecord> getPrimaryKey() {
        return Keys.KEY_BATCH_STEP_EXECUTION_CONTEXT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BatchStepExecutionContextRecord>> getKeys() {
        return Arrays.<UniqueKey<BatchStepExecutionContextRecord>>asList(Keys.KEY_BATCH_STEP_EXECUTION_CONTEXT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BatchStepExecutionContextRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BatchStepExecutionContextRecord, ?>>asList(Keys.STEP_EXEC_CTX_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionContext as(String alias) {
        return new BatchStepExecutionContext(alias, this);
    }

    /**
     * Rename this table
     */
    public BatchStepExecutionContext rename(String name) {
        return new BatchStepExecutionContext(name, null);
    }
}
