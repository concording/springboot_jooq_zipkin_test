/**
 * This class is generated by jOOQ
 */
package com.grb.indonesia.jooq.data.jooq.tables;


import com.grb.indonesia.jooq.data.jooq.Keys;
import com.grb.indonesia.jooq.data.jooq.Pinpoint;
import com.grb.indonesia.jooq.data.jooq.tables.records.BatchJobExecutionSeqRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchJobExecutionSeq extends TableImpl<BatchJobExecutionSeqRecord> {

    private static final long serialVersionUID = -23660386;

    /**
     * The reference instance of <code>pinpoint.BATCH_JOB_EXECUTION_SEQ</code>
     */
    public static final BatchJobExecutionSeq BATCH_JOB_EXECUTION_SEQ = new BatchJobExecutionSeq();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BatchJobExecutionSeqRecord> getRecordType() {
        return BatchJobExecutionSeqRecord.class;
    }

    /**
     * The column <code>pinpoint.BATCH_JOB_EXECUTION_SEQ.ID</code>.
     */
    public final TableField<BatchJobExecutionSeqRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pinpoint.BATCH_JOB_EXECUTION_SEQ.UNIQUE_KEY</code>.
     */
    public final TableField<BatchJobExecutionSeqRecord, String> UNIQUE_KEY = createField("UNIQUE_KEY", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false), this, "");

    /**
     * Create a <code>pinpoint.BATCH_JOB_EXECUTION_SEQ</code> table reference
     */
    public BatchJobExecutionSeq() {
        this("BATCH_JOB_EXECUTION_SEQ", null);
    }

    /**
     * Create an aliased <code>pinpoint.BATCH_JOB_EXECUTION_SEQ</code> table reference
     */
    public BatchJobExecutionSeq(String alias) {
        this(alias, BATCH_JOB_EXECUTION_SEQ);
    }

    private BatchJobExecutionSeq(String alias, Table<BatchJobExecutionSeqRecord> aliased) {
        this(alias, aliased, null);
    }

    private BatchJobExecutionSeq(String alias, Table<BatchJobExecutionSeqRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pinpoint.PINPOINT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BatchJobExecutionSeqRecord>> getKeys() {
        return Arrays.<UniqueKey<BatchJobExecutionSeqRecord>>asList(Keys.KEY_BATCH_JOB_EXECUTION_SEQ_UNIQUE_KEY_UN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchJobExecutionSeq as(String alias) {
        return new BatchJobExecutionSeq(alias, this);
    }

    /**
     * Rename this table
     */
    public BatchJobExecutionSeq rename(String name) {
        return new BatchJobExecutionSeq(name, null);
    }
}
