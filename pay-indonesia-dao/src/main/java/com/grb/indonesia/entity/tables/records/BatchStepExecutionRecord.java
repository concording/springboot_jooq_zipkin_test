/**
 * This class is generated by jOOQ
 */
package com.grb.indonesia.entity.tables.records;


import com.grb.indonesia.entity.tables.BatchStepExecution;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchStepExecutionRecord extends UpdatableRecordImpl<BatchStepExecutionRecord> implements Record18<Long, Long, String, Long, Timestamp, Timestamp, String, Long, Long, Long, Long, Long, Long, Long, Long, String, String, Timestamp> {

    private static final long serialVersionUID = -1096544188;

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.STEP_EXECUTION_ID</code>.
     */
    public void setStepExecutionId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.STEP_EXECUTION_ID</code>.
     */
    public Long getStepExecutionId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.VERSION</code>.
     */
    public void setVersion(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.VERSION</code>.
     */
    public Long getVersion() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.STEP_NAME</code>.
     */
    public void setStepName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.STEP_NAME</code>.
     */
    public String getStepName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.JOB_EXECUTION_ID</code>.
     */
    public void setJobExecutionId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.JOB_EXECUTION_ID</code>.
     */
    public Long getJobExecutionId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.START_TIME</code>.
     */
    public void setStartTime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.START_TIME</code>.
     */
    public Timestamp getStartTime() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.END_TIME</code>.
     */
    public void setEndTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.END_TIME</code>.
     */
    public Timestamp getEndTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.STATUS</code>.
     */
    public void setStatus(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.STATUS</code>.
     */
    public String getStatus() {
        return (String) get(6);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.COMMIT_COUNT</code>.
     */
    public void setCommitCount(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.COMMIT_COUNT</code>.
     */
    public Long getCommitCount() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.READ_COUNT</code>.
     */
    public void setReadCount(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.READ_COUNT</code>.
     */
    public Long getReadCount() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.FILTER_COUNT</code>.
     */
    public void setFilterCount(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.FILTER_COUNT</code>.
     */
    public Long getFilterCount() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.WRITE_COUNT</code>.
     */
    public void setWriteCount(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.WRITE_COUNT</code>.
     */
    public Long getWriteCount() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.READ_SKIP_COUNT</code>.
     */
    public void setReadSkipCount(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.READ_SKIP_COUNT</code>.
     */
    public Long getReadSkipCount() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.WRITE_SKIP_COUNT</code>.
     */
    public void setWriteSkipCount(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.WRITE_SKIP_COUNT</code>.
     */
    public Long getWriteSkipCount() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.PROCESS_SKIP_COUNT</code>.
     */
    public void setProcessSkipCount(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.PROCESS_SKIP_COUNT</code>.
     */
    public Long getProcessSkipCount() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.ROLLBACK_COUNT</code>.
     */
    public void setRollbackCount(Long value) {
        set(14, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.ROLLBACK_COUNT</code>.
     */
    public Long getRollbackCount() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.EXIT_CODE</code>.
     */
    public void setExitCode(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.EXIT_CODE</code>.
     */
    public String getExitCode() {
        return (String) get(15);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.EXIT_MESSAGE</code>.
     */
    public void setExitMessage(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.EXIT_MESSAGE</code>.
     */
    public String getExitMessage() {
        return (String) get(16);
    }

    /**
     * Setter for <code>pinpoint.BATCH_STEP_EXECUTION.LAST_UPDATED</code>.
     */
    public void setLastUpdated(Timestamp value) {
        set(17, value);
    }

    /**
     * Getter for <code>pinpoint.BATCH_STEP_EXECUTION.LAST_UPDATED</code>.
     */
    public Timestamp getLastUpdated() {
        return (Timestamp) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<Long, Long, String, Long, Timestamp, Timestamp, String, Long, Long, Long, Long, Long, Long, Long, Long, String, String, Timestamp> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<Long, Long, String, Long, Timestamp, Timestamp, String, Long, Long, Long, Long, Long, Long, Long, Long, String, String, Timestamp> valuesRow() {
        return (Row18) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.STEP_EXECUTION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.STEP_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.JOB_EXECUTION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.START_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.END_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.COMMIT_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.READ_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.FILTER_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.WRITE_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.READ_SKIP_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field13() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.WRITE_SKIP_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field14() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.PROCESS_SKIP_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field15() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.ROLLBACK_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.EXIT_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.EXIT_MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field18() {
        return BatchStepExecution.BATCH_STEP_EXECUTION.LAST_UPDATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getStepExecutionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getStepName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getJobExecutionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value8() {
        return getCommitCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getReadCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getFilterCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getWriteCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getReadSkipCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value13() {
        return getWriteSkipCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value14() {
        return getProcessSkipCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value15() {
        return getRollbackCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getExitCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getExitMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value18() {
        return getLastUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value1(Long value) {
        setStepExecutionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value2(Long value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value3(String value) {
        setStepName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value4(Long value) {
        setJobExecutionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value5(Timestamp value) {
        setStartTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value6(Timestamp value) {
        setEndTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value7(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value8(Long value) {
        setCommitCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value9(Long value) {
        setReadCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value10(Long value) {
        setFilterCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value11(Long value) {
        setWriteCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value12(Long value) {
        setReadSkipCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value13(Long value) {
        setWriteSkipCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value14(Long value) {
        setProcessSkipCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value15(Long value) {
        setRollbackCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value16(String value) {
        setExitCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value17(String value) {
        setExitMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord value18(Timestamp value) {
        setLastUpdated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchStepExecutionRecord values(Long value1, Long value2, String value3, Long value4, Timestamp value5, Timestamp value6, String value7, Long value8, Long value9, Long value10, Long value11, Long value12, Long value13, Long value14, Long value15, String value16, String value17, Timestamp value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BatchStepExecutionRecord
     */
    public BatchStepExecutionRecord() {
        super(BatchStepExecution.BATCH_STEP_EXECUTION);
    }

    /**
     * Create a detached, initialised BatchStepExecutionRecord
     */
    public BatchStepExecutionRecord(Long stepExecutionId, Long version, String stepName, Long jobExecutionId, Timestamp startTime, Timestamp endTime, String status, Long commitCount, Long readCount, Long filterCount, Long writeCount, Long readSkipCount, Long writeSkipCount, Long processSkipCount, Long rollbackCount, String exitCode, String exitMessage, Timestamp lastUpdated) {
        super(BatchStepExecution.BATCH_STEP_EXECUTION);

        set(0, stepExecutionId);
        set(1, version);
        set(2, stepName);
        set(3, jobExecutionId);
        set(4, startTime);
        set(5, endTime);
        set(6, status);
        set(7, commitCount);
        set(8, readCount);
        set(9, filterCount);
        set(10, writeCount);
        set(11, readSkipCount);
        set(12, writeSkipCount);
        set(13, processSkipCount);
        set(14, rollbackCount);
        set(15, exitCode);
        set(16, exitMessage);
        set(17, lastUpdated);
    }
}
